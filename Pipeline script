
pipeline {
    agent any
    
    tools {
        jdk 'jdk11'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME= tool 'sonar-scanner'
    } 

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jaiswaladi246/Ekart.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh "mvn clean compile"
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.url=http://localhost:9000/ -Dsonar.login=squ_8441c871ceb6289aad470704d1e40a3b0027882a -Dsonar.projectName=Ekart \
                -Dsonar.java.binaries=. \
                -Dsonar.projectKey=Ekart '''
            }
        }
        
        stage('Build Application') {
            steps {
               sh "mvn clean install -DskipTests=true"
        
            }
        }
        stage('Build & Push Docker Image') {
            steps {
               script {
                   withDockerRegistry(credentialsId: '8e8630e1-bca0-47d0-8956-192f57725171') {
                    
                        sh "docker build -t shopping:latest -f docker/Dockerfile ."
                        sh "docker tag shopping:latest docker21222324/shopping:latest"
                        sh"docker push docker21222324/shopping:latest"
                }
               }
        
            }
        }
        stage('Trigger CD Pipeline') {
            steps {
                build job: "CD_Pipeline" , wait: true 
        
            }
        }
    }
}
